<?xml version="1.0" encoding="UTF-8" ?>   
    <!DOCTYPE configuration PUBLIC "-//ibatis.apache.org//DTD Config 3.0//EN" 
    "http://ibatis.apache.org/dtd/ibatis-3-config.dtd">
<configuration>
	<settings>
		<!-- 全局映射器启用缓存 -->
		<setting name="cacheEnabled" value="true" />
		<!-- 查询时，关闭关联对象即时加载以提高性能 -->
		<setting name="lazyLoadingEnabled" value="true" />
		<!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能 -->
		<setting name="aggressiveLazyLoading" value="false" />
		<!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 允许使用列标签代替列名 -->
		<setting name="useColumnLabel" value="true" />
		<!-- 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖,
				***,如果设置为true，就无法使用id的自定义新增 -->
		<setting name="useGeneratedKeys" value="false" />
		<!-- 给予被嵌套的resultMap以字段-属性的映射支持 -->
		<setting name="autoMappingBehavior" value="FULL" />
		<!-- 配置默认的执行器，SIMPLE 执行器没有什么特别之处，REUSE 执行器重用预处理语句，BATCH 执行器重用语句和批量更新 -->
		<setting name="defaultExecutorType" value="REUSE" />
		<!-- 数据库超过600秒仍未响应则超时 -->
		<setting name="defaultStatementTimeout" value="600" />
		<!-- 是否启用下划线与驼峰式命名规则的映射（如first_name => firstName） -->
		<setting name="mapUnderscoreToCamelCase" value="true" />
		<!-- 设置增强的SQL语言驱动，替换默认的驱动  -->
	</settings>
	
	<plugins>
	     
    <!-- com.github.pagehelper为PageHelper类所在包名 -->
    <plugin interceptor="com.github.pagehelper.PageHelper">
        <property name="dialect" value="mysql"/>
        <!-- 该参数默认为false -->
        <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
        <!-- 和startPage中的pageNum效果一样-->
        <property name="offsetAsPageNum" value="true"/>
        <!-- 该参数默认为false -->
        <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
        <property name="rowBoundsWithCount" value="true"/>
        <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
        <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
        <property name="pageSizeZero" value="true"/>
        <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
        <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
        <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
        <property name="reasonable" value="true"/>
        <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
        <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
        <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,不配置映射的用默认值 -->
        <!-- 不理解该含义的前提下，不要随便复制该配置 -->
        <property name="params" value="pageNum=start;pageSize=limit;"/>
    </plugin>
    
	  <plugin interceptor="com.github.abel533.mapperhelper.MapperInterceptor">
	    <!--================================================-->
	    <!--可配置参数说明(一般无需修改)-->
	    <!--================================================-->
	    <!--UUID生成策略-->
	    <!--配置UUID生成策略需要使用OGNL表达式-->
	    <!--默认值32位长度:@java.util.UUID@randomUUID().toString().replace("-", "")-->
	    <!--<property name="UUID" value="@java.util.UUID@randomUUID().toString()"/>-->
	    <!--主键自增回写方法,默认值MYSQL,详细说明请看文档
	    <property name="IDENTITY" value="HSQLDB"/>-->
	    <!--序列的获取规则,使用{num}格式化参数，默认值为{0}.nextval，针对Oracle-->
	    <!--可选参数一共3个，对应0,1,2,分别为SequenceName，ColumnName,PropertyName
	    <property name="seqFormat" value="{0}.nextval"/>-->
	    <!--主键自增回写方法执行顺序,默认AFTER,可选值为(BEFORE|AFTER)-->
	    <!--<property name="ORDER" value="AFTER"/>-->
	    <!--通用Mapper接口，多个通用接口用逗号隔开-->
	    <property name="mappers" value="com.github.abel533.mapper.Mapper"/>
	  </plugin>
	</plugins>
	
	<!-- 数据库设置 -->
	<environments default="development">
		<environment id="development">            
		<transactionManager type="JDBC" />            
			<dataSource type="POOLED">                
				<property name="driver" value="org.apache.derby.jdbc.EmbeddedDriver" />                
				<property name="url" value="jdbc:derby:ibderby;create=true" />                
				<property name="username" value="" />                
				<property name="password" value="" /> 
			</dataSource>        
		</environment>    
	</environments>
</configuration>